<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	    <property name="securityManager" ref="securityManager"/>
	    
	    <!-- override these for application-specific URLs if you like: -->
	    <property name="loginUrl" value="/"/>
	    <property name="successUrl" value="/home"/>
	    <!-- <property name="unauthorizedUrl" value="/unauthorized.jsp"/> -->
	    <!-- The 'filters' property is not necessary since any declared javax.servlet.Filter bean  -->
	    <!-- defined will be automatically acquired and available via its beanName in chain        -->
	    <!-- definitions, but you can perform instance overrides or name aliases h	ere if you like: -->
	    <!-- <property name="filters">
	        <util:map>
	            <entry key="anAlias" value-ref="someFilter"/>
	        </util:map>
	    </property> -->
		<property name="filterChainDefinitions">
            <value>
            	/resources/** = anon
            	/resources/images/** = anon
            	/resources/font/** = anon
            	/resources/js/** = anon
            	/resources/js/fusion/** = anon
                /login = anon
                /forgotPassword = anon
                /emailPassword = anon
                /home/** = authc
                /logout = logout
                /** = authc
            </value>
        </property>
	</bean>	
	
	<!-- Define any javax.servlet.Filter beans you want anywhere in this application context.   -->
	<!-- They will automatically be acquired by the 'shiroFilter' bean above and made available -->
	<!-- to the 'filterChainDefinitions' property.  Or you can manually/explicitly add them     -->
	<!-- to the shiroFilter's 'filters' Map if desired. See its JavaDoc for more details.       -->
	<!-- <bean id="someFilter" class=""/> -->
	
	<!-- <bean id="anotherFilter" class=""> 
	
	 </bean> -->
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
	    <property name="realm" ref="customRealm"/>
	</bean>
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	
	<!-- Define the Shiro Realm implementation you want to use to connect to your back-end -->
	<!-- security datasource: -->
	<bean id="customRealm" class="com.gamma.dam.auth.DamRealm">
	
	</bean>		
</beans>
